#include <stdio.h>
#include <stdlib.h>

void main1()
{
	const int  hj = 10;
	int a[hj];//a是数组名,下标必须是常量或者常量表达式  ，
	//为了有效使用内存，并且内存是碎片化的

	//int类型规定了占据4个内存字节，有10个元素，规定了占据40个字节

	printf("%x", a);//a是数组名，等价于内存地址
	printf("\n数组内存字节%d", sizeof(a));//求出数组占据多少内存
	printf("\n数组占据%d个元素", sizeof(a) / sizeof(int));//求出数组有多少个元素
	a[0] = 100;//直接访问数组的元素
	for (int i = 0; i < 10; i++)
	{
		//a[i]=i;//对数组循环初始化

		a[i] = rand() % 100;//rand就是随机数生成，除以100的余数限定了它的范围
	}
	for (int j = 0; j < 12; j++)
	{
		printf("\n%d,%x,%x", a[j], &a[j], a + j);//循环打印数组的每一个元素
		//int类型，每个元素地址相隔4个字节
		//a+j是计算机访问内存的方法，a+0相当于第一个元素的地址，
		//a+1相当于第二个元素的地址，a+2相当于第三个元素的地址
		//&a[j]等价于a+j
	}
	//数组不可以越界，越界以后读取到其他的内存，所以读取的数据的很垃圾,等价于变量没有初始化
	//数组越界，后果是自己承担，我们要遵守规则，不要越界

	system("pause");
}